title: Presidential Election
subtitle: The second round results have come in...
view-if: year = 1932 and month == 4 and not hindenburg_term_extended and presidential_election_r2_trigger
frequency: 1000
max-visits: 1
new-page: true
tags: event
go-to: election_algorithm
set-jump: pres_election
face-image: img/hindenburg_election.jpg

@pres_election

The first round has ended, with no candidate receiving an absolute majority of votes. Hitler's results were disappointing to him and his party, [? if not hitler_support_hindenburg: but he has chosen to remain as a candidate?][? if hitler_support_hindenburg: resulting in him dropping out and supporting Hindenburg instead?]. [? if spd_support_thalmann == 0 and kpd_support_braun == 0: Thälmann has also remained in the running, refusing to back what they view as the lesser evil.?] 

Following last month’s events, Duesterberg has withdrawn from the race. His votes are expected to be [? if not hitler_support_hindenburg: split between Hindenburg and Hitler?][? if hitler_support_hindenburg: redistributed to Hindenburg?]. However, Hugenberg’s <span style="color: #3E88B3;">**DNVP**</span> continues to withhold an official endorsement in favor of any candidate.

- @final_election: The second round results...

@final_election
go-to: election_algorithm
set-jump: post_election


@post_election
on-arrival: {!
Q.braun_votes = 0;
Q.hindenburg_votes = 0;
Q.hitler_votes = 0;
Q.thalmann_votes = 0;
Q.duesterburg_votes = 0;

// initial phase:
Q.hitler_votes += Q.nsdap_normalized;
Q.hitler_votes += (Q.dnvp_normalized*0.4);

Q.hindenburg_votes += Q.other_normalized;
Q.hindenburg_votes += (Q.dnvp_normalized*0.6);

if (Q.braun_campaign) {
    Q.braun_votes += Q.spd_normalized;
    if (Q.ddp_support_braun) {
        if (Q.ddp_ideology == "Left") Q.braun_votes += Q.ddp_normalized;
        if (Q.ddp_ideology == "Moderate") {
            Q.braun_votes += Q.ddp_normalized*0.8;
            Q.hindenburg_votes += Q.ddp_normalized*0.2;
        }
        if (Q.ddp_ideology == "Right") {
            Q.braun_votes += Q.ddp_normalized*0.6;
            Q.hindenburg_votes += Q.ddp_normalized*0.4;
        }
    } else {
        Q.hindenburg_votes += Q.ddp_normalized;
    }
    if (Q.prussia_leader == "Braun") Q.braun_votes += (Q.pro_republic/2000);
    if (Q.z_support_braun && Q.z_support_braun == 1) {
        if (Q.z_ideology == "Left") { 
            Q.braun_votes += (Q.z_normalized - 0.03);
            Q.hindenburg_votes += 0.03;
        }
        if (Q.z_ideology == "Right" && !Q.z_glaze_braun) {
            Q.braun_votes += (Q.z_normalized - 0.03)*0.8;
            Q.hindenburg_votes = (Q.z_normalized - 0.03)*0.2;
            Q.hindenburg_votes += 0.03;
        } else if (Q.z_ideology == "Right" && Q.z_glaze_braun) {
            Q.braun_votes += (Q.z_normalized - 0.03)*0.9;
            Q.hindenburg_votes += (Q.z_normalized - 0.03)*0.1;
            Q.hindenburg_votes += 0.03;
        }
    } else {
        Q.hindenburg_votes += Q.z_normalized;
    }
    if (Q.kpd_support_braun) {
        if (!Q.kpd_glaze_braun) {
            Q.braun_votes += Q.kpd_normalized*0.8;
            if (!Q.hitler_support_hindenburg) Q.hitler_votes += Q.kpd_normalized*0.1;
        } else if (Q.kpd_glaze_braun) {
            Q.braun_votes += Q.kpd_normalized*0.95;
            if (!Q.hitler_support_hindenburg) Q.hitler_votes += Q.kpd_normalized*0.05;
        }
        if (Q.sapd_formed && Q.sapd_votes) {
            Q.braun_votes += Q.sapd_normalized;
        }
    } else {
        Q.thalmann_votes += Q.kpd_normalized*0.95;
        if (!Q.hitler_support_hindenburg) Q.hitler_votes += Q.kpd_normalized*0.05;
        if (Q.sapd_formed && Q.sapd_votes) {
            Q.thalmann_votes += Q.sapd_normalized;
        }
    }
    if (Q.lvp_support_braun) {
        if (Q.lvp_ideology == "Left") {
            Q.braun_votes += Q.lvp_normalized*0.8;
            Q.hindenburg_votes += Q.lvp_normalized*0.2;
        }
        if (Q.lvp_ideology == "Moderate") {
            Q.braun_votes += Q.lvp_normalized*0.6;
            Q.hindenburg_votes += Q.lvp_normalized*0.4;
        }
        if (Q.lvp_ideology == "Right") {
            Q.braun_votes += Q.lvp_normalized*0.4;
            Q.hindenburg_votes += Q.lvp_normalized*0.6;
        }
    } else {
        Q.hindenburg_votes += Q.lvp_normalized;
    }
} else if (Q.spd_support_thalmann) {
    Q.thalmann_votes += Q.kpd_normalized;
    Q.thalmann_votes += Q.spd_normalized;
    if (!Q.media_communist_seen) {
        Q.thalmann_votes -= (Q.new_middle_spd_normalized / 1000);
        Q.thalmann_votes -= (Q.old_middle_spd_normalized / 1000);
    } else if (Q.media_communist_seen) {
        Q.thalmann_votes -= (Q.new_middle_spd_normalized / 1500);
        Q.thalmann_votes -= (Q.old_middle_spd_normalized / 1500);
    }
    Q.thalmann_votes -= (Q.rural_spd_normalized / 500);
    Q.thalmann_votes -= (Q.catholics_spd_normalized / 500);
    if (!Q.spd_glaze_thalmann) {
        Q.thalmann_votes -= (Q.workers_spd_normalized / 2000);
        Q.hindenburg_votes += (Q.workers_spd_normalized / 2000);
    }
    Q.hindenburg_votes += Q.z_normalized;
    Q.hindenburg_votes += Q.ddp_normalized;
    Q.hindenburg_votes += Q.dvp_normalized;
    Q.hindenburg_votes += Q.lvp_normalized;
} else {
    if (!Q.hindenburg_democracy_bonus) Q.hindenburg_votes += Q.spd_normalized*0.95;
    if (Q.hindenburg_democracy_bonus) Q.hindenburg_votes += Q.spd_normalized;
    Q.hindenburg_votes += Q.z_normalized;
    Q.hindenburg_votes += Q.ddp_normalized;
    Q.hindenburg_votes += Q.dvp_normalized;
    Q.hindenburg_votes += Q.lvp_normalized;
    Q.thalmann_votes += Q.kpd_normalized;
}
if (Q.hitler_support_hindenburg) {
    Q.hitler_votes -= Q.nsdap_normalized;
    Q.hitler_votes -= (Q.dnvp_normalized*0.4);
    Q.hindenburg_votes += Q.nsdap_normalized;
    Q.hindenburg_votes += (Q.dnvp_normalized*0.4);
}

if (Q.hindenburg_to_braun_bonus) {
    Q.hindenburg_votes -= Q.hindenburg_to_braun_bonus;
    Q.braun_votes += Q.hindenburg_to_braun_bonus;
}
if (Q.thalmann_to_braun_bonus) {
    Q.thalmann_votes -= Q.thalmann_to_braun_bonus;
    Q.braun_votes += Q.thalmann_to_braun_bonus;
}

Q.total_votes_pres = Q.hindenburg_votes + Q.hitler_votes + Q.thalmann_votes + Q.braun_votes + Q.duesterburg_votes;
Q.hindenburg_votes_normalized = (Q.hindenburg_votes/Q.total_votes_pres);
Q.hitler_votes_normalized = (Q.hitler_votes/Q.total_votes_pres);
Q.braun_votes_normalized = (Q.braun_votes/Q.total_votes_pres);
Q.thalmann_votes_normalized = (Q.thalmann_votes/Q.total_votes_pres);
Q.duesterburg_votes_normalized = (Q.duesterburg_votes/Q.total_votes_pres);

// check for majority
Q.hindenburg_votes = Math.round(Q.hindenburg_votes_normalized*1000)/10;
Q.braun_votes = Math.round(Q.braun_votes_normalized*1000)/10;
Q.hitler_votes = Math.round(Q.hitler_votes_normalized*1000)/10;
Q.thalmann_votes = Math.round(Q.thalmann_votes_normalized*1000)/10;
Q.duesterburg_votes = Math.round(Q.duesterburg_votes_normalized*1000)/10;

Q.hindenburg_majority = (Q.hindenburg_votes >= 50);
Q.thalmann_majority = (Q.thalmann_votes >= 50);
Q.hitler_majority = (Q.hitler_votes >= 50);
Q.braun_majority = (Q.braun_votes >= 50);
Q.duesterburg_majority = (Q.duesterburg_votes >= 50);
Q.any_majority = Q.hindenburg_majority | Q.thalmann_majority | Q.hitler_majority | Q.braun_majority | Q.duesterburg_majority;

// check for plurality
Q.hindenburg_plurality = (Q.hindenburg_votes >= Q.hitler_votes && Q.hindenburg_votes >= Q.braun_votes && Q.hindenburg_votes >= Q.thalmann_votes && Q.hindenburg_votes >= Q.duesterburg_votes);
Q.thalmann_plurality = (Q.thalmann_votes >= Q.hindenburg_votes && Q.thalmann_votes >= Q.braun_votes && Q.thalmann_votes >= Q.hitler_votes && Q.thalmann_votes >= Q.duesterburg_votes);
Q.hitler_plurality = (Q.hitler_votes >= Q.hindenburg_votes && Q.hitler_votes >= Q.braun_votes && Q.hitler_votes >= Q.thalmann_votes && Q.hitler_votes >= Q.duesterburg_votes);
Q.braun_plurality = (Q.braun_votes >= Q.hindenburg_votes && Q.braun_votes >= Q.hitler_votes && Q.braun_votes >= Q.thalmann_votes && Q.braun_votes >= Q.duesterburg_votes);
Q.duesterburg_plurality = (Q.duesterburg_votes >= Q.thalmann_votes && Q.duesterburg_votes >= Q.hitler_votes && Q.duesterburg_votes >= Q.hindenburg_votes && Q.duesterburg_votes >= Q.braun_votes);
// If no candidate gets above 50%, then there's a second round. In the second round, a plurality wins. 
Q.election_round += 1;

// making the vote numbers nicer for the display
Q.hindenburg_votes_disp = Q.hindenburg_votes.toFixed(1);
Q.braun_votes_disp = Q.braun_votes.toFixed(1);
Q.hitler_votes_disp = Q.hitler_votes.toFixed(1);
Q.thalmann_votes_disp = Q.thalmann_votes.toFixed(1);
Q.duesterburg_votes_disp = Q.duesterburg_votes.toFixed(1);
!}
go-to: hindenburg_wins if hindenburg_plurality == 1; thalmann_wins if thalmann_plurality == 1; hitler_wins if hitler_plurality == 1; braun_wins if braun_plurality == 1

Results:

<span style="color: #808080;">**Hindenburg**</span> - [+ hindenburg_votes_disp +]%

<span style="color: #7A3C00;">**[+ nsdap_candidate +]**</span> - [+ hitler_votes_disp +]%

[? if kpd_support_braun == 0 : <span style="color: #700000;">**Thälmann**</span> - [+ thalmann_votes_disp +]% ?]

[? if braun_campaign > 0 : <span style="color: #c00000;">**Braun**</span> - [+ braun_votes_disp +]% ?]

@hindenburg_wins
on-arrival: president = "Hindenburg"; hindenburg_angry_bruning += 20

As expected, the incumbent Hindenburg wins the presidency. Let's hope he continues to keep the <span style="color: #7A3C00;">Nazis</span> out of power.

[? if spd_support_hindenburg: The fact that, even with the votes from the <span style="color: #c00000;">socialists</span> and <span style="color: #000000;">Catholics</span>, Hindenburg has failed to secure a majority in the first round has been a great embarrassment to him. Realizing that many of his former supporters have turned to Hitler, he is now shifting further to the right. [? if bruning_time: He personally blames Brüning for this, and his patience with the Chancellor is wearing especially thin as of late.?] ?]

@thalmann_wins
on-arrival: president = "Thälmann"; kpd_relation = 80;

Ernst Thälmann of the <span style="color: #700000;">**KPD**</span> has won the presidency. Immediately, the <span style="color: #7A3C00;">far</span>-<span style="color: #3E88B3;">right</span> launches a coup attempt against the government. We have no choice but to unite with the <span style="color: #700000;">**KPD**</span> against the <span style="color: #7A3C00;">fascists</span>...

- @civil_war: This is civil war.

@hitler_wins
on-arrival: president = nsdap_candidate; chancellor = "Hitler"; chancellor_party = "NSDAP"

[? if nsdap_candidate == "Hitler" : Adolf Hitler of the <span style="color: #7A3C00;">**NSDAP**</span> has won the presidency. He wastes no time in consolidating power. ?]
[? if nsdap_candidate != "Hitler" : The <span style="color: #7A3C00;">**NSDAP**</span> candidate [+ president +] has won. The first action President [+ president +] takes is inviting Hitler back into Germany, and appointing him chancellor. The <span style="color: #7A3C00;">Nazis</span> waste no time in consolidating power. ?]

- @hitler_takes_power: What do we do now?


@braun_wins
on-arrival: president = "Braun"; reformist_dissent -= 15; center_dissent -= 15; labor_dissent -= 15; left_dissent -= 5; workers_spd += 8*(1-dissent); old_middle_spd += 5*(1-dissent); new_middle_spd += 5*(1-dissent); rural_spd += 5*(1-dissent); unemployed_spd += 5*(1-dissent);

Otto Braun of the <span style="color: #c00000;">**SPD**</span> has won the presidency! This is a moment of celebration for our party, and his victory is able to bolster our support.

@duesterburg_wins
on-arrival: president = "Braun"; reformist_dissent -= 15; center_dissent -= 15; labor_dissent -= 15; left_dissent -= 5; workers_spd += 8*(1-dissent); old_middle_spd += 5*(1-dissent); new_middle_spd += 5*(1-dissent); rural_spd += 5*(1-dissent); unemployed_spd += 5*(1-dissent);

Duesterberg is too ashamed to accept the Presidency, and out of the kindness of his heart, has given it to Otto Braun. 